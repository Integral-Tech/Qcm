{{#models}}{{#model}}
#include "{{namespace}}/model/{{classname}}.h"

namespace {{namespace}}::model {
{{^oneOf}}{{#isModel}}
{{classname}}::{{classname}}(){{#hasVars}}:{{/hasVars}}{{#vars}} 
    {{name}}({{{defaultValue}}}){{^-last}},{{/-last}}{{/vars}} {}
{{classname}}::~{{classname}}() {}
{{/isModel}} {{/oneOf}}
} // namespace {{namespace}}::model

{{#isEnum}}
IMPL_CONVERT(std::string, {{namespace}}::model::{{classname}}) {
    switch(in) {
        {{#allowableValues}}
        {{#enumVars}}
        case in_type::{{{name}}}: out = "{{{name}}}"; break;
        {{/enumVars}}
        {{/allowableValues}}
        default: break;
    }
}
{{/isEnum}} 

{{/model}}
{{/models}}