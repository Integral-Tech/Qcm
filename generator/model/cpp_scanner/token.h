#pragma once

#ifndef YY_FLEX_MAJOR_VERSION
#    define LTT(...) return TType::IDENTIFIER;
#endif

enum class TType
{
    ASM = 0,
    AUTO,
    BOOL,
    BREAK,
    CASE,
    CATCH,
    CHAR,
    CLASS,
    CONST,
    CONST_CAST,
    CONTINUE,
    DEFAULT,
    DELETE,
    DO,
    DOUBLE,
    DYNAMIC_CAST,
    ELSE,
    ENUM,
    EXPLICIT,
    EXPORT,
    EXTERN,
    FALSE,
    FLOAT,
    FOR,
    FRIEND,
    GOTO,
    IF,
    INLINE,
    INT,
    LONG,
    MUTABLE,
    NAMESPACE,
    NEW,
    OPERATOR,
    PRIVATE,
    PROTECTED,
    PUBLIC,
    REGISTER,
    REINTERPRET_CAST,
    RETURN,
    SHORT,
    SIGNED,
    SIZEOF,
    STATIC,
    STATIC_CAST,
    STRUCT,
    SWITCH,
    TEMPLATE,
    THIS,
    THROW,
    TRUE,
    TRY,
    TYPEDEF,
    TYPEID,
    TYPENAME,
    UNION,
    UNSIGNED,
    USING,
    VIRTUAL,
    VOID,
    VOLATILE,
    WCHAR_T,
    WHILE,

    SCOPE,
    ELLIPSIS,
    SHL,
    SHR,
    EQ,
    NE,
    LE,
    GE,
    LOG_AND,
    LOG_OR,
    INC,
    DEC,
    ARROW_STAR,
    ARROW,
    DOT_STAR,
    ASS_ADD,
    ASS_SUB,
    ASS_MUL,
    ASS_DIV,
    ASS_MOD,
    ASS_XOR,
    ASS_AND,
    ASS_OR,
    ASS_SHR,
    ASS_SHL,
};

struct Token {
    TType type;
};